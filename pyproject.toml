[build-system]
requires = ["setuptools>=80.9.0"]
build-backend = "setuptools.build_meta"

[project]
name = "llm-chat"
version = "0.1.0"
description = "A chatbot application that leverages LLMs served via OpenAI spec APIs."
readme = "README.md"
requires-python = ">=3.10,<4.0"
authors = [
  {name = "Sarthak Joshi", email = "sarthak.joshi94@yahoo.in"}
]
license = {text = "MIT"}
keywords = ["chatbot", "streamlit", "ai"]
dependencies = [
  "streamlit~=1.49.1",
  "pydantic-settings~=2.10.1",
  "openai~=1.107.0",
  "llama-index~=0.13.0",
  "llama-index-vector-stores-qdrant~=0.8.1",
  "llama-index-embeddings-openai~=0.5.0",
  "llama-index-embeddings-huggingface~=0.6.0",
  "qdrant-client~=1.15.1",
  "tree-sitter~=0.25.0",
  "tree-sitter-c-sharp~=0.23.1",
  "tree-sitter-embedded-template~=0.25.0",
  "tree-sitter-language-pack~=0.9.0",
  "tree-sitter-yaml~=0.7.1",
  "fastembed~=0.7.1",
  "numpy~=2.2.6",
  "tenacity~=9.1.2",
  "httpx~=0.28.1",
  "trafilatura~=2.0.0",
  "google-api-python-client~=2.181.0",
  "transformers~=4.56.1",
  "sentence_transformers~=5.1.0",
  "scipy~=1.16.1",
  "langgraph~=0.6.6"
]

[project.optional-dependencies]
dev = [
  "pytest~=8.4.1",
  "pytest-mock~=3.15.0",
  "pytest-cov~=7.0.0",
  "pytest-asyncio~=1.1.0",
  "pytest-httpx~=0.35.0",
  "hypothesis~=6.138.2",
  "pyright~=1.1.403",
  "ruff~=0.12.2",
  "mypy~=1.17.1",
  "pylint==3.3.8",
  "pylint_google_style_guide_imports_enforcing==1.3.1",
  "bandit~=1.8.6",
  "yamllint~=1.37.1",
  "python-semantic-release~=10.4.0"
]
profiling = [
  "matplotlib>=3.7.0",
  "plotly>=5.15.0",
  "pandas>=2.0.0",
  "psutil>=5.9.0",
  "py-spy>=0.3.14",
  "flameprof>=0.4.0"
]
all = [
  "llm-chat[dev,profiling]"
]

[project.scripts]
chatbot = "chatbot.cli:main"

[tool.bandit]
exclude_dirs = ["scripts", "dev"]
skips = ["B101", "B110", "B311", "B404", "B603"]
severity = "medium"

[tool.isort]
src_paths = ["chatbot"]

[tool.pyright]
pythonVersion = "3.10"
typeCheckingMode = "strict"
reportMissingImports = true
reportUnknownMemberType = true
reportUnknownParameterType = true
reportUnknownVariableType = true
reportUnknownArgumentType = true
reportPrivateUsage = "warning"
reportUntypedFunctionDecorator = "warning"

[tool.pytest.ini_options]
minversion = "8.4.1"
addopts = "-ra -q --cov"
testpaths = [
  "tests"
]

[tool.setuptools]
packages = ["chatbot"]

[tool.semantic_release]
version_variables = [
    "pyproject.toml:version"
]
build_command = "python -m pip install build && python -m build"
dist_path = "dist/"
upload_to_pypi = false
upload_to_vcs_release = true
commit_parser = "conventional"
logging_use_named_masks = false
major_on_zero = true
tag_format = "v{version}"

[tool.semantic_release.commit_parser_options]
allowed_tags = ["build", "chore", "ci", "docs", "feat", "fix", "perf", "style", "refactor", "test"]
minor_tags = ["feat"]
patch_tags = ["fix", "perf"]

[tool.semantic_release.branches.main]
match = "(main|master)"
prerelease_token = "rc"
prerelease = false

[tool.semantic_release.changelog]
template_dir = "templates"
exclude_commit_patterns = []

[tool.semantic_release.changelog.default_templates]
changelog_file = "CHANGELOG.md"
