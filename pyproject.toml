[build-system]
requires = ["setuptools>=80.9.0"]
build-backend = "setuptools.build_meta"

[project]
name = "llm-chat"
version = "0.1.0"
description = "A chatbot application that leverages LLMs served via OpenAI spec APIs."
readme = "README.md"
requires-python = ">=3.10,<4.0"
authors = [
    { name = "Sarthak Joshi", email = "sarthak.joshi94@yahoo.in" },
]
license = { text = "MIT" }
keywords = ["chatbot", "streamlit", "ai"]
dependencies = [
    "streamlit~=1.46.1",
    "pydantic-settings~=2.0.0",
    "openai~=1.93.0",
]

[project.optional-dependencies]
dev = [
    "pytest~=8.4.1",
    "pytest-cov~=6.2.1",
    "ruff~=0.12.2",
    "mypy~=1.16.1",
    "bandit~=1.8.6",
    "gibberish-detector~=0.1.1",
]

[project.scripts]
chatbot = "chatbot.cli:main"

[tool.pytest.ini_options]
minversion = "8.4.1"
addopts = "-ra -q --cov"
testpaths = [
    "tests",
]

[tool.ruff]
lint.select = ["E", "F", "I", "N", "W", "B", "C4", "SIM", "UP"]
lint.ignore = ["E501"]
target-version = "py310"
line-length = 88

[tool.ruff.format]
quote-style = "double"
indent-style = "space"
skip-magic-trailing-comma = false
line-ending = "auto"

[tool.ruff.lint.per-file-ignores]
"tests/*" = ["S101", "T201", "PT011"]
"scripts/*" = ["T201"]
"__init__.py" = ["F401"]
[tool.ruff.lint.isort]
known-first-party = ["llm-chat"]
force-sort-within-sections = true
split-on-trailing-comma = true

[tool.pyright]
pythonVersion = "3.10"
typeCheckingMode = "strict"
reportMissingImports = true
reportUnknownMemberType = true
reportUnknownParameterType = true
reportUnknownVariableType = true
reportUnknownArgumentType = true
reportPrivateUsage = "warning"
reportUntypedFunctionDecorator = "warning"

[tool.bandit]
exclude_dirs = ["tests", "examples"]
skips = ["B101"]
